// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SendBuffer_Model {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SendBuffer_Model {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSendBuffer_Model(bb:flatbuffers.ByteBuffer, obj?:SendBuffer_Model):SendBuffer_Model {
  return (obj || new SendBuffer_Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSendBuffer_Model(bb:flatbuffers.ByteBuffer, obj?:SendBuffer_Model):SendBuffer_Model {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SendBuffer_Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

guid():string|null
guid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
guid(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

dontSave():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startSendBuffer_Model(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGuid(builder:flatbuffers.Builder, guidOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, guidOffset, 0);
}

static addDontSave(builder:flatbuffers.Builder, dontSave:boolean) {
  builder.addFieldInt8(1, +dontSave, +false);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, messageOffset, 0);
}

static endSendBuffer_Model(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishSendBuffer_ModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedSendBuffer_ModelBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createSendBuffer_Model(builder:flatbuffers.Builder, guidOffset:flatbuffers.Offset, dontSave:boolean, messageOffset:flatbuffers.Offset):flatbuffers.Offset {
  SendBuffer_Model.startSendBuffer_Model(builder);
  SendBuffer_Model.addGuid(builder, guidOffset);
  SendBuffer_Model.addDontSave(builder, dontSave);
  SendBuffer_Model.addMessage(builder, messageOffset);
  return SendBuffer_Model.endSendBuffer_Model(builder);
}
}
